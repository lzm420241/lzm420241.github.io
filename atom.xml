<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端那点事</title>
  <subtitle>记录前端笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lzm420241.github.io/"/>
  <updated>2017-05-19T16:10:27.000Z</updated>
  <id>https://lzm420241.github.io/</id>
  
  <author>
    <name>Zhiming Li</name>
    <email>lzm420241@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>4.图层</title>
    <link href="https://lzm420241.github.io/2017/05/19/ps-4/"/>
    <id>https://lzm420241.github.io/2017/05/19/ps-4/</id>
    <published>2017-05-19T14:21:28.000Z</published>
    <updated>2017-05-19T16:10:27.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是图层"><a href="#什么是图层" class="headerlink" title="什么是图层"></a>什么是图层</h3><ol>
<li>图层就如同堆叠在一起的透明纸，每一张纸上都保存着不同的图像。我们可以透过上面图层的透明区域看到下面层的图像</li>
<li>图层面板含有：选取图层类型，打开／关闭图层过滤，设置图层的混合模式，设置图层的不透明度，设置填充不透明度，图层锁定按钮，图层链接图标</li>
</ol>
<h3 id="新建图层"><a href="#新建图层" class="headerlink" title="新建图层"></a>新建图层</h3><ol>
<li>点击图层面板中心间图层按钮即在当前图层上面新建一个图层，按住Ctrl键然后点击图层即可在当前图层下面新建图层–图层➡新建➡图层</li>
<li>如果在图像中创建了选区，通过图层➡新建➡通过拷贝的图层或按下Ctrl+J的方式将选区的图层拷贝到当前图层上面，剪切为Shift+Ctrl+J</li>
<li>如果没有背景图层，那么通过图层➡新建➡背景图层来将选中图层转为背景图层</li>
</ol>
<h3 id="编辑图层"><a href="#编辑图层" class="headerlink" title="编辑图层"></a>编辑图层</h3><ol>
<li>选择所有图层-选择➡所有图层，选择链接图层-图层➡选择链接图层，取消选择图层-选择➡取消选择图层</li>
<li>图层➡重命名图层</li>
<li>锁定图层：锁定透明度像素，锁定图像像素，锁定位置，锁定全部</li>
<li>查找图层：选择➡查找图层</li>
<li>删除图层：图层➡删除</li>
<li>栅格化图层内容-如果要使用绘画工具和滤镜编辑文字图层，形状图层，矢量蒙版，让图层内容转化为光栅图像，才能进行编辑 图层➡栅格化</li>
<li>清除图像的杂边 图层➡修边</li>
</ol>
<h3 id="排列与分布图层"><a href="#排列与分布图层" class="headerlink" title="排列与分布图层"></a>排列与分布图层</h3><ol>
<li>图层➡排列 置为顶层，前移一层／后移一层，置为底层，反向</li>
<li>图层➡对齐，图层➡对齐➡顶边</li>
<li>分布图层：图层➡分布➡水平居中</li>
<li>将图层与选区对齐：图层➡将图层与选区对齐</li>
</ol>
<h3 id="合并与盖印图层"><a href="#合并与盖印图层" class="headerlink" title="合并与盖印图层"></a>合并与盖印图层</h3><ol>
<li>合并图层：图层➡合并图层，图层➡向下合并，快捷键Ctrl+E，图层➡合并可见图层，快捷键Shift+Ctrl+E</li>
<li>将图层合并到背景中：图层➡拼合图像</li>
<li>盖印是将多个图层中图像合并到一个新的图层中，同时保持其他图层完好无损，向下盖印快捷键Ctrl+ALt+E，盖印多个图层-选择多个图层，按下Ctrl+Alt+E，盖印可见图层，盖印图层组</li>
</ol>
<h3 id="用图层组管理图层"><a href="#用图层组管理图层" class="headerlink" title="用图层组管理图层"></a>用图层组管理图层</h3><ol>
<li>创建图层组：点击图层面板中的文件夹图标或图层➡新建➡组</li>
<li>从所选图层中创建图层组：图层➡图层编组或Ctrl+G</li>
<li>取消图层组，但保留图层可选择该图层组，执行图层➡取消图层编组或Shift+Ctrl+G，如果要删除整个图层组将其移入图层面板的删除图标</li>
</ol>
<h3 id="图层样式"><a href="#图层样式" class="headerlink" title="图层样式"></a>图层样式</h3><ol>
<li>添加图层样式：1.图层➡图层样式 选择一个有效的命令；2.可以在图层面板中点击图层样式按钮</li>
<li>图层样式对话框中的效果名称前面的复选框如果选中则可以停用该效果，但保留效果参数</li>
<li>斜面和浮雕：对图层添加高光和阴影的各种组合，使图层呈现立体的浮雕效果</li>
<li>描边：可以使用颜色，渐变或图案描画对象的轮廓，它对于硬边形状，如文字特别有用</li>
<li>内阴影：在紧靠图层内容的边缘内添加阴影，使图层内容产生凹陷效果</li>
<li>内发光：沿图层内容的边缘向内创建发光效果</li>
<li>光泽： 应用光滑光泽的内部阴影，通常用来创建金属表面的光泽外观</li>
<li>颜色叠加：在图层上叠加指定的颜色，通过设置颜色的混合模式和不透明度，可以控制叠加效果</li>
<li>渐变叠加：在图层上叠加指定的渐变颜色</li>
<li>图案叠加：在图层上叠加指定的图案并且可以缩放图案，设置图案的不透明度和混合模式</li>
<li>外发光：沿图层内容的边缘向外创建发光效果</li>
<li>投影：为图层内容添加阴影</li>
</ol>
<h3 id="编辑图层样式"><a href="#编辑图层样式" class="headerlink" title="编辑图层样式"></a>编辑图层样式</h3><ol>
<li>显示与隐藏-图层面板中点击眼睛图标可以显示或者隐藏图层</li>
<li>修改效果-双击图层一个效果名称可以打开图层样式对话框，并且可以修改样式参数</li>
<li>复制，粘贴与清除效果-图层➡图层样式➡拷贝图层样式 复制图层样式，粘贴图层样式-图层➡图层样式➡粘贴图层样式</li>
<li>移动图层样式-按住Alt键，然后将图层fx移动到另外一个图层达到移动效果</li>
<li>如果要删除图层样式，将其移动到图层面板中的垃圾桶图标</li>
<li>使用全局光-在图层样式中，投影，内阴影，斜面和浮雕都包含全局光，选择此选项后，以上效果都会使用相同角度的光源</li>
<li>使用等高线-投影，内阴影，内发光，外发光，斜面和浮雕，光泽都包含等高线设置选项，等高线可以选择一个预设的等高线样式</li>
</ol>
<h3 id="使用样式面板"><a href="#使用样式面板" class="headerlink" title="使用样式面板"></a>使用样式面板</h3><ol>
<li>选择一个图层，点击样式面板中一个样式，既可为其添加样式</li>
<li>创建样式，删除样式 样式面板底部有创建样式和删除样式的图标</li>
<li>存储样式库，载入样式库</li>
</ol>
<h3 id="图层复合"><a href="#图层复合" class="headerlink" title="图层复合"></a>图层复合</h3><ol>
<li>图层复合面板用来创建，编辑，显示和删除图层复合</li>
<li>窗口➡图层复合 打开图层复合窗口</li>
<li>图层复合时面板状态的快照，它记录当前文档图层的可见性，位置和外观，通过图层复合可以快速在文档中切换不同版面的显示状态，比较适合多种设计方案</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是图层&quot;&gt;&lt;a href=&quot;#什么是图层&quot; class=&quot;headerlink&quot; title=&quot;什么是图层&quot;&gt;&lt;/a&gt;什么是图层&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;图层就如同堆叠在一起的透明纸，每一张纸上都保存着不同的图像。我们可以透过上面图层的透明区域看到下面层的图
    
    </summary>
    
      <category term="设计知识点记录" scheme="https://lzm420241.github.io/categories/%E8%AE%BE%E8%AE%A1%E7%9F%A5%E8%AF%86%E7%82%B9%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="design" scheme="https://lzm420241.github.io/tags/design/"/>
    
      <category term="[object Object]" scheme="https://lzm420241.github.io/tags/object-Object/"/>
    
  </entry>
  
  <entry>
    <title>3.选区</title>
    <link href="https://lzm420241.github.io/2017/05/18/ps-3/"/>
    <id>https://lzm420241.github.io/2017/05/18/ps-3/</id>
    <published>2017-05-18T15:25:13.000Z</published>
    <updated>2017-05-19T16:13:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="认识选区"><a href="#认识选区" class="headerlink" title="认识选区"></a>认识选区</h3><ol>
<li>选区分为两种:普通选区和羽化的选区</li>
<li>选择和抠图的几种方法：1.基本形状选择法；2.色调差异选择法；3.快速蒙版选择法；4.简单选区细化法；5.钢笔工具选择法；6.通道选择法；7.插件选择法；</li>
</ol>
<h3 id="选区的基本操作"><a href="#选区的基本操作" class="headerlink" title="选区的基本操作"></a>选区的基本操作</h3><ol>
<li>全选与反选 选择➡全部或Ctrl+A可以选择当前文件全部图像</li>
<li>复制选区 快捷键Ctrl+C可复制整个图像 如果文档中有多个图层可按下Shift+Ctrl+C</li>
<li>反选 选择➡反向或Shift+Ctrl+I可执行反选</li>
<li>取消选择分区 选择➡取消选择或Ctrl+D可以取消选择，如果要重新选择可以执行选择➡重新选择</li>
<li>选区运算 在工具选项栏中有：新选区，与选区交叉，添加到选区，从选区中减去，与选区这四种运算</li>
<li>如果当前有选区可以使用选框，套索，魔棒工具继续选区，按住Shift可以在当前选区添加选区，等同上</li>
<li>移动选区 隐藏与显示选区 执行视图➡显示➡选区边缘或Ctrl+H可以隐藏选区</li>
<li>选区工具：矩形选区，椭圆选区，单行选区工具，单列选区工具，套索工具，多边形套索工具，磁性套索工具</li>
</ol>
<h3 id="魔棒与快速选择工具"><a href="#魔棒与快速选择工具" class="headerlink" title="魔棒与快速选择工具"></a>魔棒与快速选择工具</h3><ol>
<li>魔棒工具和快速选择工具是基于色调和颜色差异来构建选区的工具</li>
<li>魔棒工具和快速选择工具的工具选项栏</li>
</ol>
<h3 id="“色彩范围”命令"><a href="#“色彩范围”命令" class="headerlink" title="“色彩范围”命令"></a>“色彩范围”命令</h3><ol>
<li>选择➡色彩范围 对话框中有选区预览图，选择-取样颜色，选区预览，检测人脸，反相等。</li>
</ol>
<h3 id="快速蒙版"><a href="#快速蒙版" class="headerlink" title="快速蒙版"></a>快速蒙版</h3><ol>
<li>快速蒙版是一种选区的转换工具，他能将选区转换为一种临时的蒙版图像，这样能通过画笔，滤镜，钢笔等工具编辑蒙版，之后再将蒙版图像转换选区</li>
<li>选择➡在快速蒙版模式下编辑 工具栏底部有快速蒙版编辑工具</li>
</ol>
<h3 id="细化选区"><a href="#细化选区" class="headerlink" title="细化选区"></a>细化选区</h3><ol>
<li>选择➡调整边缘</li>
</ol>
<h3 id="选区的编辑操作"><a href="#选区的编辑操作" class="headerlink" title="选区的编辑操作"></a>选区的编辑操作</h3><ol>
<li>选择➡修改➡边界 可以将选区的边界向内部和外部扩展</li>
<li>选择➡修改➡平滑 让选区更加平滑</li>
<li>选择➡修改➡扩展／收缩 扩展／收缩选区范围</li>
<li>选择➡修改➡羽化 选区羽化，且控制羽化范围</li>
<li>选择➡变换选区 对选区应用进行变换</li>
<li>存储选区–单机通道面板底部将选区存储为通道按钮，将选区保存在Alpha通道中</li>
<li>选择➡存储选区 也可以存储选区</li>
<li>选择➡载入选区 即可载入选区，或者按住Ctrl单击通道缩览图</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;认识选区&quot;&gt;&lt;a href=&quot;#认识选区&quot; class=&quot;headerlink&quot; title=&quot;认识选区&quot;&gt;&lt;/a&gt;认识选区&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;选区分为两种:普通选区和羽化的选区&lt;/li&gt;
&lt;li&gt;选择和抠图的几种方法：1.基本形状选择法；2.色调差异选择
    
    </summary>
    
      <category term="设计知识点记录" scheme="https://lzm420241.github.io/categories/%E8%AE%BE%E8%AE%A1%E7%9F%A5%E8%AF%86%E7%82%B9%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="design" scheme="https://lzm420241.github.io/tags/design/"/>
    
      <category term="[object Object]" scheme="https://lzm420241.github.io/tags/object-Object/"/>
    
  </entry>
  
  <entry>
    <title>2.图像的基本编辑方法</title>
    <link href="https://lzm420241.github.io/2017/05/17/ps-2/"/>
    <id>https://lzm420241.github.io/2017/05/17/ps-2/</id>
    <published>2017-05-17T14:37:31.000Z</published>
    <updated>2017-05-18T15:26:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h3><ol>
<li>Ctrl+N快速新建文件  文件➡新建</li>
<li>Ctrl+O打开文件</li>
<li>图层➡图层样式➡外发光可以调节光晕</li>
<li>文件➡导入可以导入视频帧和WIA等内容</li>
<li>Ctrl+S可以保存文件</li>
<li>Ctrl+W可以关闭文件</li>
</ol>
<h3 id="在图像中添加版权信息"><a href="#在图像中添加版权信息" class="headerlink" title="在图像中添加版权信息"></a>在图像中添加版权信息</h3><ol>
<li>文件➡文件简介可以添加版权信息</li>
<li>使用“嵌入水印”滤镜也可以在图像中加入版权信息</li>
</ol>
<h3 id="修改像素尺寸和画布大小"><a href="#修改像素尺寸和画布大小" class="headerlink" title="修改像素尺寸和画布大小"></a>修改像素尺寸和画布大小</h3><ol>
<li>图像➡图像大小 命令可以设置图像大小</li>
<li>图像大小弹出窗中可以设置文档大小，当缩小图像时会减少像素数量，但是画质不变，但是增大图像时，画质会下降</li>
<li>图像➡画布大小 调整画布的大小</li>
<li>图像➡图像旋转 旋转画布</li>
<li>图像➡复制 复制文档</li>
<li>编辑➡拷贝 拷贝文档 快捷键:Ctrl+C</li>
<li>编辑➡剪切 剪切文档</li>
<li>编辑➡粘贴 粘贴文档 快捷键:Ctrl+V</li>
<li>编辑➡选择性粘贴</li>
<li>编辑➡清楚 清楚选中的图像</li>
<li>编辑➡还原 撤销最后一次修改 快捷键:Ctrl+Z</li>
<li>编辑➡后退一步 可以后退上一步，编辑➡重做 可还原初始 快捷键:Shift+Ctrl+Z</li>
<li>文件➡恢复 直接将文件恢复到最后一次保存状态</li>
<li>tips—图像➡调整以及滤镜菜单中的滤镜，当我们修改参数时，若要还原默认值可以按住Alt键，对话框中的取消会变成复位</li>
</ol>
<h3 id="用历史记录面板进行还原操作"><a href="#用历史记录面板进行还原操作" class="headerlink" title="用历史记录面板进行还原操作"></a>用历史记录面板进行还原操作</h3><ol>
<li>窗口➡历史记录 可查看操作的历史记录</li>
<li>历史记录只能保存20步的操作步骤</li>
<li>若要增加步数可在 编辑➡首选项➡性能对话框中增加历史记录的保存步数，但是这样会占用很多内存</li>
<li>另外一种方式是绘制完重要的效果之后可在历史记录面板中点击快照按钮，将画面的当前状态保存为一个快照，按住Alt键然后点击快照按钮即可创建快照</li>
<li>删除快照–将快照移入删除按钮中</li>
<li>编辑➡清理 将菜单中的历史记录和全部命令会清除ps打开的所有文档</li>
</ol>
<h3 id="图像的变换和变形操作"><a href="#图像的变换和变形操作" class="headerlink" title="图像的变换和变形操作"></a>图像的变换和变形操作</h3><ol>
<li>编辑➡变换 可以对涂层，路径，矢量形状，以及选中的图像进行变换操作</li>
<li>移动工具选项栏中可以点击显示变换控件，即可变形图像</li>
<li>移动工具快速调入变换状态快捷键:Ctrl+T，变换图像，且复制出新的图像内容快捷键:Alt+Shfit+Ctrl+T</li>
<li>复制图层快捷键:Ctrl+J</li>
</ol>
<h3 id="内容识别比例缩放"><a href="#内容识别比例缩放" class="headerlink" title="内容识别比例缩放"></a>内容识别比例缩放</h3><ol>
<li>将背景图层转换普通图层快捷键:安装ALt然后双击图层</li>
<li>编辑➡内容识别比例</li>
<li>取消选取快捷键:Ctrl+D</li>
<li>用Alpha通道保护图像–在使用内容缩放时容易导致图像变形，为了保护部分地方不变形，选择受保护选取然后点击通道的蒙版，将选取保存为Alpha通道</li>
</ol>
<h3 id="操控变形"><a href="#操控变形" class="headerlink" title="操控变形"></a>操控变形</h3><ol>
<li>编辑➡操控变形 可以操控变形</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;新建文件&quot;&gt;&lt;a href=&quot;#新建文件&quot; class=&quot;headerlink&quot; title=&quot;新建文件&quot;&gt;&lt;/a&gt;新建文件&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Ctrl+N快速新建文件  文件➡新建&lt;/li&gt;
&lt;li&gt;Ctrl+O打开文件&lt;/li&gt;
&lt;li&gt;图层➡图层样式
    
    </summary>
    
      <category term="设计知识点记录" scheme="https://lzm420241.github.io/categories/%E8%AE%BE%E8%AE%A1%E7%9F%A5%E8%AF%86%E7%82%B9%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="design" scheme="https://lzm420241.github.io/tags/design/"/>
    
      <category term="photoshop" scheme="https://lzm420241.github.io/tags/photoshop/"/>
    
  </entry>
  
  <entry>
    <title>你不知道javascript（上卷）知识点总结</title>
    <link href="https://lzm420241.github.io/2017/05/17/javascript/"/>
    <id>https://lzm420241.github.io/2017/05/17/javascript/</id>
    <published>2017-05-17T11:24:32.000Z</published>
    <updated>2017-05-18T15:27:16.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="作用域和闭包"><a href="#作用域和闭包" class="headerlink" title="作用域和闭包"></a>作用域和闭包</h3><h4 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h4><ol>
<li>编译的三步骤:分词／词法分析，解析／语法分析，代码生成</li>
<li>javascript编译器工作过程:1.在当前作用域中声明一个变量（如果之前没有声明）；2.在运行时引擎会在作用域中查找该变量，如果能够找到变量就会对它赋值</li>
<li>编译器查找变量的方法是通过LHS查询和RHS查询，当变量出现在赋值操作的左侧时执行LHS查询，当赋值出现在右侧时进行的是RHS查询</li>
<li>当一个块或函数嵌套在另一个块或函数时，就发生了作用域的嵌套，因此，在当前作用域中无法找到某个变量时，引擎会在外层作用域中查找，直到找到该变量，或抵达最外层作用域停止</li>
<li>在非严格模式下，如果通过RHS查询无法查询到变量，但是通过LHS查询时如果不存在这个变量会自动声明这个变量，在严格模式下两者查询模式都是不行的 </li>
</ol>
<h4 id="词法作用域"><a href="#词法作用域" class="headerlink" title="词法作用域"></a>词法作用域</h4><ol>
<li>作用域共有两种工作模型:1.词法作用域；2.动态作用域</li>
<li>词法作用域就是定义在词法阶段的作用域</li>
<li><p>欺骗词法的两种机制(非常影响性能):<br>1.eval函数可以接受一个字符串为参数，并将其中的内容视为好像在书写时就存在于程序中这个位置的代码，严格模式的声明是无法修改所在的作用域    </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">str, a</span>)</span>&#123;</div><div class="line">    <span class="built_in">eval</span>(str);  <span class="comment">//欺骗</span></div><div class="line">    <span class="built_in">console</span>.log(a, b);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> b = <span class="number">2</span>;</div><div class="line">foo(<span class="string">"var b = 3;"</span>, <span class="number">1</span>) <span class="comment">//1,3</span></div></pre></td></tr></table></figure>
<p>2.with关键字通常被当作重复引用同一个对象中的多个属性的快捷方式</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">    <span class="attr">a</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">b</span>: <span class="number">2</span>,</div><div class="line">    <span class="attr">c</span>: <span class="number">3</span></div><div class="line">&#125;</div><div class="line">obj.a = <span class="number">2</span>;</div><div class="line">obj.b = <span class="number">3</span>;</div><div class="line">obj.c = <span class="number">4</span>;</div><div class="line"><span class="comment">//简单的快捷方式</span></div><div class="line"><span class="keyword">with</span>(obj)&#123;</div><div class="line">    a = <span class="number">3</span>;</div><div class="line">    b = <span class="number">4</span>;</div><div class="line">    c = <span class="number">5</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="函数作用域和块作用域"><a href="#函数作用域和块作用域" class="headerlink" title="函数作用域和块作用域"></a>函数作用域和块作用域</h4><ol>
<li>函数会被当作函数表达式而不是一个标准的函数声明来处理</li>
<li>width，try／catch中的catch都是块作用域中例子</li>
</ol>
<h4 id="提升"><a href="#提升" class="headerlink" title="提升"></a>提升</h4><ol>
<li>包含变量和函数在内的所有声明都会在任何代码被执行前首先被处理</li>
<li>只有声明本身会被提升，而赋值或其他运行逻辑会留在原地。如果提升该拜年了代码的顺序，会造成严重的破坏</li>
<li>函数声明会被提升，但是函数表达式却不会被提升</li>
<li>函数会首先被提升，然后才是变量</li>
<li>代码执行会经过两个阶段任务:1.编译阶段的人物；2.执行阶段任务</li>
</ol>
<h4 id="作用域闭包"><a href="#作用域闭包" class="headerlink" title="作用域闭包"></a>作用域闭包</h4><ol>
<li>无论通过任何手段将内部函数传递到所在的词法作用域以外，他都会持有对原始定义作用域的引用，无论在何处执行这个函数都是使用闭包</li>
<li>当函数可以记住并访问所在的词法作用域，即使函数是在当前词法作用域之外执行，这时就产生了闭包</li>
</ol>
<h4 id="动态作用域"><a href="#动态作用域" class="headerlink" title="动态作用域"></a>动态作用域</h4><ol>
<li>词法作用域是在写代码或者说定义时确定的，而动态作用域是在运行时确定的，词法作用域关注函数在何处声明，动态作用域关注函数从何处调用</li>
</ol>
<h3 id="this和对象原型"><a href="#this和对象原型" class="headerlink" title="this和对象原型"></a>this和对象原型</h3><h4 id="关于this"><a href="#关于this" class="headerlink" title="关于this"></a>关于this</h4><ol>
<li>arguments.callee目前唯一一种从匿名函数对象内部引用自身的方法</li>
<li>this是在运行时调用的，并不是在编写时绑定的。这个记录会包含函数在哪里被调用，函数的调用方法，传入参数等信息。this就是记录的其中一个属性，会在函数执行的过程中用到</li>
<li>this实际上是在函数被调用时发生的绑定，它指向什么完全取决于函数在哪里被调用</li>
</ol>
<h4 id="this全面解析"><a href="#this全面解析" class="headerlink" title="this全面解析"></a>this全面解析</h4><ol>
<li>调用位置:函数在代码中被调用的位置，而不是声明的位置</li>
<li>查看绑定规则:1.默认绑定；2.隐式绑定；3.显式绑定（call和apply）；4.new绑定</li>
<li>四种绑定的优先级:new绑定&gt;显示绑定&gt;隐式绑定&gt;默认绑定</li>
<li>将null和undefined通过call或apply传入函数实际等价于默认绑定</li>
<li>软绑定➡如果给默认绑定指定一个全局对象和undefined以外的值，那就可以和硬绑定相同的效果，同时保留隐式绑定或者显示绑定修改this的能力</li>
<li></li>
</ol>
<h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><ol>
<li>对象可以通过声明形式和构造形式定义</li>
<li>六种类型:string，number，boolean，null，undefined，object</li>
<li>对象子类型:String，Number，Boolean，Object，Function，Array，Date，RegExp，Error</li>
<li>在对象中属性名永远都是字符串，如果使用了string以外的值，那么它首先会转化为字符串</li>
</ol>
<p>3.3.2</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;作用域和闭包&quot;&gt;&lt;a href=&quot;#作用域和闭包&quot; class=&quot;headerlink&quot; title=&quot;作用域和闭包&quot;&gt;&lt;/a&gt;作用域和闭包&lt;/h3&gt;&lt;h4 id=&quot;作用域&quot;&gt;&lt;a href=&quot;#作用域&quot; class=&quot;headerlink&quot; title=&quot;作用域
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>1.ps基本操作</title>
    <link href="https://lzm420241.github.io/2017/05/17/building-basic-task-for-photoshop/"/>
    <id>https://lzm420241.github.io/2017/05/17/building-basic-task-for-photoshop/</id>
    <published>2017-05-16T16:04:10.000Z</published>
    <updated>2017-05-18T15:26:55.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ps基本工作界面"><a href="#ps基本工作界面" class="headerlink" title="ps基本工作界面"></a>ps基本工作界面</h3><ol>
<li>界面分为菜单栏，工具选项栏，工具箱，选项卡，文档窗口，面板这几部分</li>
<li>文档窗口:<strong>ctrl+Tab快捷键可切换界面</strong></li>
<li>工具箱分为选择工具，裁剪和切片，测量工具，修饰工具，绘画工具，导航工具等几种类别工具</li>
</ol>
<h3 id="查看图像"><a href="#查看图像" class="headerlink" title="查看图像"></a>查看图像</h3><ol>
<li>工具箱底部的屏幕模式按钮可查看标准屏幕，全屏模式，菜单栏的全屏模式</li>
<li>在多个窗口查看图像可在<strong>窗口&gt;排列</strong>中选择哪种展示方式</li>
<li>旋转视图工具可旋转画布<strong>在工具栏中使用旋转工具</strong></li>
<li>在工具栏中使用缩放工具来调整窗口比例<strong>按住Alt键可缩小窗口</strong></li>
<li>在工具栏中用抓手工具移动画面<strong>Alt键缩小窗口，command键放大窗口，按住H键然后单击鼠标会显示全部图像，并且出现一个矩形框，放开H键和鼠标可移动到某块区域</strong></li>
<li>在<strong>窗口&gt;导航器</strong>中查看图像，<strong>通过扩大和缩小来查看图片，右键点击图像以外的暂存区可选择背景颜色</strong></li>
<li>在<strong>窗口&gt;工作区</strong>使用预设工作区</li>
<li>在菜单栏中的<strong>编辑&gt;菜单</strong>中打开键盘快捷键合菜单，<strong>点击菜单tab可定义菜单中各种颜色，在键盘快捷键中可自定义快捷键</strong></li>
</ol>
<h3 id="使用辅助工具"><a href="#使用辅助工具" class="headerlink" title="使用辅助工具"></a>使用辅助工具</h3><ol>
<li>在<strong>视图&gt;标尺</strong>中使用标尺，在窗口左上角向右下方拉可以设置坐标原点</li>
<li>在标尺中可以拉出参考线，如果要删除参考线则拉到标尺里面就删除了</li>
<li>在<strong>视图&gt;显示&gt;网格</strong>中使用网格</li>
<li>在工具栏中使用注释工具可在图像中添加注释</li>
</ol>
<h3 id="附几个快捷键"><a href="#附几个快捷键" class="headerlink" title="附几个快捷键:"></a>附几个快捷键:</h3><ol>
<li>Ctrl+o可以快速打开文件</li>
<li>Ctrl++可以放大图片，Ctrl+-可以缩小图片</li>
<li>Ctrl+R可以打开标尺，再使用一次关闭标尺</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;ps基本工作界面&quot;&gt;&lt;a href=&quot;#ps基本工作界面&quot; class=&quot;headerlink&quot; title=&quot;ps基本工作界面&quot;&gt;&lt;/a&gt;ps基本工作界面&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;界面分为菜单栏，工具选项栏，工具箱，选项卡，文档窗口，面板这几部分&lt;/li&gt;
&lt;
    
    </summary>
    
      <category term="设计知识点记录" scheme="https://lzm420241.github.io/categories/%E8%AE%BE%E8%AE%A1%E7%9F%A5%E8%AF%86%E7%82%B9%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="design" scheme="https://lzm420241.github.io/tags/design/"/>
    
      <category term="photoshop" scheme="https://lzm420241.github.io/tags/photoshop/"/>
    
  </entry>
  
  <entry>
    <title>页面设计的四条原则</title>
    <link href="https://lzm420241.github.io/2017/05/15/page-design/"/>
    <id>https://lzm420241.github.io/2017/05/15/page-design/</id>
    <published>2017-05-15T13:18:05.000Z</published>
    <updated>2017-05-18T15:26:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="网页设计四条原则"><a href="#网页设计四条原则" class="headerlink" title="网页设计四条原则"></a>网页设计四条原则</h3><p><strong>原则一:设计之对比色原则</strong></p>
<pre><code>主要目的是突出重点，将内容区分出来
</code></pre><p><strong>原则二:设计之对奇原则</strong>     </p>
<pre><code>主要是更好地展示网页信息，样式清晰,所有设计元素和页面上其他元素要有视觉上的练习
</code></pre><p><strong>原则三:设计之重复性原则</strong>    </p>
<pre><code>主要目的是保持整个页面统一的风格，各个页面的风格不会互相冲突
</code></pre><p><strong>原则四:设计之相似性原则</strong>    </p>
<pre><code>主要是将相似的元素放倒一起，这样使用户易于查找    
</code></pre><p><strong>附带</strong><a href="http://colorschemedesigner.com/csd-3.5/" target="_blank" rel="external">页面选色在线网站</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;网页设计四条原则&quot;&gt;&lt;a href=&quot;#网页设计四条原则&quot; class=&quot;headerlink&quot; title=&quot;网页设计四条原则&quot;&gt;&lt;/a&gt;网页设计四条原则&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;原则一:设计之对比色原则&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
    
    </summary>
    
      <category term="设计知识点记录" scheme="https://lzm420241.github.io/categories/%E8%AE%BE%E8%AE%A1%E7%9F%A5%E8%AF%86%E7%82%B9%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="design" scheme="https://lzm420241.github.io/tags/design/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 博客创建记录</title>
    <link href="https://lzm420241.github.io/2017/05/11/hello-world/"/>
    <id>https://lzm420241.github.io/2017/05/11/hello-world/</id>
    <published>2017-05-11T03:26:01.000Z</published>
    <updated>2017-05-13T09:38:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过hexo工具可以在github中搭建一个静态blog。本节中主要记录第一次如何在github中搭建整个静态blog。</p>
<h3 id="搭建github"><a href="#搭建github" class="headerlink" title="搭建github"></a>搭建github</h3><ol>
<li><a href="https://github.com/" target="_blank" rel="external">官网</a>中申请账号</li>
<li><a href="https://segmentfault.com/a/1190000002533334" target="_blank" rel="external">本地配置github</a></li>
</ol>
<h3 id="安装hexo，上传资源文件至github"><a href="#安装hexo，上传资源文件至github" class="headerlink" title="安装hexo，上传资源文件至github"></a>安装hexo，上传资源文件至github</h3><p>1.<strong>安装hexo</strong><br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
<p>2.<strong>通过hexo生成blog基本文件</strong><br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init username.github.io</div></pre></td></tr></table></figure></p>
<p>3.<strong>配置blog中根目录的配置文件_config.yml及添加一些hexo的基本工具</strong><br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">修改_config.yml的配置文件  </div><div class="line">    修改site，导入个人基本信息</div><div class="line">    通过添加theme来使用其它主题的blog，并且在配置文件中修改theme</div><div class="line">    在theme中设置使用哪种评论工具目前duoshuo已经停止使用</div><div class="line">添加hexo的基本工具</div><div class="line">    hexo-deployer-git 向远程仓库导入文件的工具</div><div class="line">    hexo-generator-json-content 配置blog标题的基本信息</div><div class="line">    hexo-generator-sitemap  添加sitemap，使得搜索引擎快速找到blog</div><div class="line">    hexo-generator-feed  添加rss</div></pre></td></tr></table></figure></p>
<p>4.<strong>生成blog资源文件</strong><br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure></p>
<p>5.<strong>上传到github</strong><br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<h3 id="hexo基本命令的使用"><a href="#hexo基本命令的使用" class="headerlink" title="hexo基本命令的使用"></a>hexo基本命令的使用</h3><p>1.<strong>新建文章</strong><br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure></p>
<p>2.<strong>本地测试blog项目</strong><br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<p>3.<strong>发布草稿</strong><br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo publish [layout] title</div></pre></td></tr></table></figure></p>
<p>4.<strong>更多关于hexo的使用，请点击<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">详情页</a></strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过hexo工具可以在github中搭建一个静态blog。本节中主要记录第一次如何在github中搭建整个静态blog。&lt;/p&gt;
&lt;h3 id=&quot;搭建github&quot;&gt;&lt;a href=&quot;#搭建github&quot; class=&quot;headerlink&quot; title=&quot;搭建github
    
    </summary>
    
      <category term="知识点入门学习" scheme="https://lzm420241.github.io/categories/%E7%9F%A5%E8%AF%86%E7%82%B9%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="github" scheme="https://lzm420241.github.io/tags/github/"/>
    
      <category term="hexo" scheme="https://lzm420241.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
